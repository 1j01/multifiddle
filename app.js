// Generated by CoffeeScript 1.6.3
var $G, G, Pane, ace_editors, code, fb_project, fb_root, hash, set_theme;

ace_editors = [];

set_theme = function(theme_name) {
  var editor, _i, _len, _results;
  _results = [];
  for (_i = 0, _len = ace_editors.length; _i < _len; _i++) {
    editor = ace_editors[_i];
    _results.push(editor.setTheme("ace/theme/" + theme_name));
  }
  return _results;
};

code = {};

$G = $(G = window);

Pane = (function() {
  function Pane(o) {
    var editor, fb_fp, firepad, resize, session,
      _this = this;
    this.pane = $('<div class="pane">');
    this.pane.appendTo('body');
    (resize = function() {
      return _this.pane.css({
        width: innerWidth,
        height: innerHeight / 2
      });
    })();
    $G.on("resize", resize);
    if (o.preview) {
      this.iframe = $('<iframe sandbox="allow-same-origin allow-scripts allow-popups allow-forms">');
      this.iframe.appendTo(this.pane);
      $G.on("code-change", function() {
        var body, data_uri, head, html, iframe;
        head = "";
        body = "";
        if (code.html) {
          body += code.html;
        }
        if (code.css) {
          head += "<style>" + code.css + "</style>";
        }
        if (code.javascript) {
          body += "<script>" + code.javascript + "</script>";
        }
        if (code.coffee) {
          body += "<script type='text/coffeescript'>" + code.coffee + "</script>";
          head += "<script src='" + G.location.href + "/lib/coffee-script.js'></script>";
        }
        html = "<!doctype html>\n<html>\n	<head>\n		<meta charset=\"utf-8\">\n		" + head + "\n	</head>\n	<body style='background:black;color:white;'>\n		" + body + "\n	</body>\n</html>";
        data_uri = "data:text/html," + encodeURI(html);
        iframe = _this.iframe[0];
        if (iframe.contentWindow) {
          return iframe.contentWindow.location.replace(data_uri);
        } else {
          return _this.iframe.attr({
            src: data_uri
          });
        }
      });
    } else {
      this.pad = $('<div>');
      this.pad.appendTo(this.pane);
      fb_fp = fb_project.child(o.lang);
      editor = ace.edit(this.pad.get(0));
      ace_editors.push(editor);
      editor.on('input', function() {
        code[o.lang] = editor.getValue();
        return $G.triggerHandler("code-change");
      });
      session = editor.getSession();
      session.setUseWrapMode(true);
      session.setUseWorker(false);
      session.setMode("ace/mode/" + o.lang);
      firepad = Firepad.fromACE(fb_fp, editor);
      firepad.on('ready', function() {
        if (firepad.isHistoryEmpty()) {
          return firepad.setText('// JavaScript Editing with Firepad!\nfunction go() {\n	var message = "Hello, world.";\n	console.log(message);\n}');
        }
      });
    }
  }

  return Pane;

})();

fb_root = new Firebase("https://multifiddle.firebaseio.com/");

fb_project = null;

hash = G.location.hash.replace('#', '');

if (hash) {
  fb_project = fb_root.child(hash);
} else {
  fb_project = fb_root.push();
  G.location = G.location + '#' + fb_project.name();
}

$(function() {
  var panes;
  return panes = [
    new Pane({
      lang: "javascript"
    }), new Pane({
      preview: true
    })
  ];
});
